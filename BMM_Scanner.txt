LINE_NUMBER : 10
COMMENT : REM SAMPLE PROGRAM WITH SUBROUTINES
LINE_NUMBER : 20
COMMENT : REM
LINE_NUMBER : 30
COMMENT : REM A IS ARRAY TO HOLD THE DATA ITEMS
LINE_NUMBER : 40
COMMENT : REM I IS THE LOOP INDEX VARIABLE
LINE_NUMBER : 50
COMMENT : REM X HOLDS THE VALUE WE SEEK
LINE_NUMBER : 60
COMMENT : REM F IS A FLAG, 0 MEANS NOT FOUND, 1 MEANS FOUND
LINE_NUMBER : 70
COMMENT : REM N IS NUMBER OF ELEMENTS IN A
LINE_NUMBER : 80
COMMENT : REM
LINE_NUMBER : 100
DIM : DIM
DATA_TYPE : A
LEFT_BRAC : (
NUM : 19
RIGHT_BRAC : )
LINE_NUMBER : 110
COMMENT : REM
LINE_NUMBER : 120
COMMENT : REM **************** MAIN *******************
LINE_NUMBER : 130
COMMENT : REM
LINE_NUMBER : 140
COMMENT : REM READ DATA INTO ARRAY A
LINE_NUMBER : 150
VARIABLE_DECARATION : LET
DATA_TYPE : N
EQUAL_TO : =
NUM : 20
LINE_NUMBER : 160
GOSUB : GOSUB
NUM : 380
LINE_NUMBER : 170
COMMENT : REM GET VALUE FOR WHICH TO SEARCH
LINE_NUMBER : 180
PRINT_STATEMENT : PRINT
TYPE : "FIND WHAT"
SEMICOLON : ;
LINE_NUMBER : 190
INPUT : INPUT
DATA_TYPE : X
LINE_NUMBER : 200
COMMENT : REM DO SEQUENTIAL SEARCH
LINE_NUMBER : 210
GOSUB : GOSUB
NUM : 470
LINE_NUMBER : 220
COMMENT : REM REPORT RESULTS
LINE_NUMBER : 230
IF : IF
DATA_TYPE : F
EQUAL_TO : =
NUM : 1
THEN : THEN
NUM : 260
LINE_NUMBER : 240
PRINT_STATEMENT : PRINT
DATA_TYPE : X
SEMICOLON : ;
TYPE : "NOT FOUND"
LINE_NUMBER : 250
GOTO : GOTO
NUM : 270
LINE_NUMBER : 260
PRINT_STATEMENT : PRINT
DATA_TYPE : X
SEMICOLON : ;
TYPE : "FOUND IN SLOT"
SEMICOLON : ;
DATA_TYPE : I
LINE_NUMBER : 270
COMMENT : REM TRY AGAIN?
LINE_NUMBER : 280
PRINT_STATEMENT : PRINT
TYPE : "TRY AGAIN"
SEMICOLON : ;
LINE_NUMBER : 290
INPUT : INPUT
DATA_TYPE: A$
LINE_NUMBER : 300
IF : IF
DATA_TYPE: A$
EQUAL_TO : =
TYPE : "Y"
THEN : THEN
NUM : 170
LINE_NUMBER : 310
IF : IF
DATA_TYPE: A$
EQUAL_TO : =
TYPE : "N"
THEN : THEN
NUM : 340
LINE_NUMBER : 320
PRINT_STATEMENT : PRINT
TYPE : "ANSWER MUST BE Y OR N!"
LINE_NUMBER : 330
GOTO : GOTO
NUM : 280
LINE_NUMBER : 340
STOP : STOP
LINE_NUMBER : 350
COMMENT : REM
LINE_NUMBER : 360
COMMENT : REM **************** SUBROUTINES *******************
LINE_NUMBER : 370
COMMENT : REM
LINE_NUMBER : 380
COMMENT : REM SUBROUTINE TO LOAD DATA FROM DATA STATEMENTS INTO A
LINE_NUMBER : 390
COMMENT : REM INPUT N NUMBER OF ELEMENTS
LINE_NUMBER : 400
COMMENT : REM OUTPUT A(), ARRAY WITH N ELEMENTS
LINE_NUMBER : 410
COMMENT : REM
LINE_NUMBER : 420
FOR : FOR
DATA_TYPE : I
EQUAL_TO : =
NUM : 0
TO : TO
DATA_TYPE : N
MINUS : -
NUM : 1
LINE_NUMBER : 430
INPUT : INPUT
DATA_TYPE : A
LEFT_BRAC : (
DATA_TYPE : I
RIGHT_BRAC : )
LINE_NUMBER : 440
NEXT : NEXT
DATA_TYPE : I
LINE_NUMBER : 450
RETURN : RETURN
LINE_NUMBER : 460
COMMENT : REM
LINE_NUMBER : 470
COMMENT : REM SUBROUTINE TO DO SEQUENTIAL SEARCH FOR X IN A
LINE_NUMBER : 480
COMMENT : REM INPUT N NUMBER OF ELEMENTS
LINE_NUMBER : 490
COMMENT : REM INPUT A(), ARRAY WITH N ELEMENTS
LINE_NUMBER : 500
COMMENT : REM INPUT X, ELEMENT VALUE TO SEARCH FOR
LINE_NUMBER : 510
COMMENT : REM OUTPUT F, 0 MEANS NOT FOUND, F=1 MEANS FOUND
LINE_NUMBER : 520
COMMENT : REM OUTPUT I, INDEX OF X IN A() IF F=1, N OTHERWISE
LINE_NUMBER : 530
COMMENT : REM
LINE_NUMBER : 540
VARIABLE_DECARATION : LET
DATA_TYPE : F
EQUAL_TO : =
NUM : 0
LINE_NUMBER : 550
FOR : FOR
DATA_TYPE : I
EQUAL_TO : =
NUM : 0
TO : TO
DATA_TYPE : N
MINUS : -
NUM : 1
LINE_NUMBER : 560
IF : IF
DATA_TYPE : A
LEFT_BRAC : (
DATA_TYPE : I
RIGHT_BRAC : )
COMPARE_NOT_EQUAL : <>
DATA_TYPE : X
THEN : THEN
NUM : 590
LINE_NUMBER : 570
VARIABLE_DECARATION : LET
DATA_TYPE : F
EQUAL_TO : =
NUM : 1
LINE_NUMBER : 580
GOTO : GOTO
NUM : 600
LINE_NUMBER : 590
NEXT : NEXT
DATA_TYPE : I
LINE_NUMBER : 600
RETURN : RETURN
LINE_NUMBER : 610
COMMENT : REM
LINE_NUMBER : 620
COMMENT : REM ******************* DATA ***********************
LINE_NUMBER : 630
DATA : DATA
NUM : 21
COMMA : ,
NUM : 85
COMMA : ,
NUM : 80
COMMA : ,
NUM : 14
COMMA : ,
NUM : 60
COMMA : ,
NUM : 76
COMMA : ,
NUM : 87
COMMA : ,
NUM : 49
COMMA : ,
NUM : 78
COMMA : ,
NUM : 81
COMMA : ,
NUM : 96
COMMA : ,
NUM : 25
COMMA : ,
NUM : 17
COMMA : ,
NUM : 22
COMMA : ,
NUM : 13
COMMA : ,
NUM : 91
COMMA : ,
NUM : 23
COMMA : ,
NUM : 62
COMMA : ,
NUM : 5
COMMA : ,
NUM : 57
LINE_NUMBER : 640
COMMENT : REM ******************* END ************************
LINE_NUMBER : 650
END : END
